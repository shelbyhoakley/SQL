#In this SQL, I utilized SQLite Studio to query a database with multiple tables in order to quantify a variety of statistics about customer and order data.
#I did not create the database, but the query code is my own.

#1. How many orders were placed in January?
SELECT COUNT(orderid)
FROM BIT_DB.JanSales
WHERE length(orderid) = 6
AND orderid <> 'Order ID'

#2. How many of those orders were for an iPhone?
SELECT count(orderid)
FROM BIT_DB.JanSales
WHERE Product = ‘iPhone’
AND length(orderid) = 6
AND orderid <> ‘Order ID’

#3. Select the customer account numbers for all the orders that were placed in February.
SELECT distinct acctnum
FROM BIT_DB.customers c
INNER JOIN BIT_DB.FebSales Feb
ON c.order_id = Feb.orderid
WHERE length(orderid) = 6
AND orderid <> ‘Order ID’

#4. Which product was the cheapest one sold in January and what was the price?
#OPTION 1:
SELECT distinct Product, price
FROM BIT_DB.JanSales
WHERE price in (SELECT min(price) FROM BIT_DB.JanSales)
#OPTION 2:
SELECT distinct Product, min(price)
FROM BIT_DB.JanSales
GROUP BY product, price
ORDER BY price asc
LIMIT 1
#OPTION 3:
SELECT distinct Product, price
FROM BIT_DB.JanSales
ORDER BY price asc
LIMIT 1

#5. What is the total revenue for each product sold in January?
SELECT sum(quantity)*price
AS revenue, product
FROM BIT_DB.JanSales
GROUP BY product

#6. Which products were sold in February at 548 Lincoln St, Seattle, WA 98101, how many of each were sold, and what was the total revenue?
SELECT
SUM(quantity), product,
SUM(quantity)*price 
AS total_revenue
FROM BIT_DB.FebSales
WHERE location = '548 Lincoln St, Seattle, WA 98101'
GROUP BY product

#7. How many customers ordered more than 2 products at a time in February, and what was the average amount spent for those customers? 
SELECT
count(distinct c.acctnum),
avg(quantity*price)
FROM BIT_DB.FebSales Feb
LEFT JOIN BIT_DB.customers c
ON Feb.orderid=c.order_id
WHERE Feb.Quantity>2
AND length(orderid) = 6
AND orderid <> 'Order ID'
